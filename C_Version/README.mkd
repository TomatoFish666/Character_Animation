# BadApple_C_Version

---

---

### 思路

截取视频的每一帧，输出为图片                          
将图片转换成ASCII码字符画，输出保存在一个文本文件中                
每次输出一幅字符画，连续输出，形成动画                     

### 环境

- Ubuntu14.04 LTS                
- gcc 4.8.4                   
- opencv 2.4.9          
- cmake 2.8           
- make 3.81           
          
### 目录树         

```
C_Version
├── README.mkd
├── Step1_Screen_Grab
│   ├── Grab_with_mplayer.sh
│   ├── Grab_with_opencv.c
│   └── images
├── Step2_Pic2Asc
│   ├── AscPic.txt
│   ├── Pic2Asc_all.sh
│   └── Pic2Asc.c
└── Step3_Play
    ├── autoPlay.sh
    ├── Play
    └── Play.c
```

---

## 第一步：抓帧

### 参考学习            

- [MPlayer 命令行模式用法详解](http://yp.oss.org.cn/software/show_resource.php?resource_id=716)            
- [ubuntu14.04中安装opencv2.4.9](http://my.oschina.net/u/1757926/blog/293976?fromerr=bsAsKQ0w) ---> 亲测可用，还提供测试用例             
- [OpenCV学习之视频读取与帧的提取、显示及保存](http://www.cnblogs.com/tgyf/archive/2013/05/19/3086916.html)                 

### 方法1：mplayer

Ubuntu下使用mplayer：

`$ mplayer -vo jpeg <videoName>`          

共6567张图片            

### 方法2：opencv库

---

## 第二步：图片转字符画

### 参考学习            

- [百度百科_cvLoadImage](http://baike.baidu.com/link?url=l5riubpsQyBd5Jfh5ExedMmYwV16pmnO5KdQDufNQYPiAdJv2hvANWwxbOopAzz39rygAZoS3xxRm2TTviLwp_) ---> 载入图片，相应最后要cvReleaseImage()                    
- [百度百科_灰度图像](http://baike.baidu.com/link?url=bqOnobbXhY1FEDj9FLiYenj2vnJ6g6cVvL3TdPdEF9zHPX5fUXUHo7_xWDbJQeiHZ0xO-D7ofgrIZE9YLDDbga)                    
- [百度百科_CvScalar](http://baike.baidu.com/link?url=eNUXQWhY-oAjQ-WHar62q5Lf_xiH_s8tydxDO_PlfcZ5HTdAI0ZNqEn1rC2eVTbAa1ovkdtdAter07aRtiwJcq)                    
- [cvGet2D](http://blog.sina.com.cn/s/blog_9edd4b8301013f83.html)                    
- [opencv cvget2d怎么用](http://zhidao.baidu.com/link?url=wRmVi9neBnv23IzjbtlL9HhXtgmM7rP8Uru308HTu0T4KC_6HT4ZVfJu9HABg4VD-6TIz2QSBK6838J0MnAjna)                    
- [百度百科_RGB](http://baike.baidu.com/link?url=KCl7qPqR6kIXxTJcAwl7ktPGLxtyAMOsJBP32uPqv0k8ZovAzDR1ZH1SYX0ilsVLDQxpl3hEl5TdOWSr-Tkc-a)                    
- [使用OpenCv把图片转为字符画](http://www.cnblogs.com/xianglan/archive/2010/12/01/1893840.html) ---> 算法比较粗糙，需要改进                    
- [Linux下编译运行OpenCV程序的两种方法](http://www.tuicool.com/articles/ieuMRnr) ---> cmake 和 make                
- [CMake与Make](http://my.oschina.net/xunxun/blog/86781) ---> 新技能Get!                                    
- [图片转化为ASCII图](http://tieba.baidu.com/p/1592726854) ---> 用的上古TC的` <graphics.h>`图形库，可借鉴其算法                  

### 一张图片转字符画            

首先借助opencv库，写一个能够将一张图片转换成字符画的程序 (Pic2Asc.c)                    
先打表设置了32个字符的灰度值，输出中间值得到白色的灰度是255，然后依次递减（步长为8），直到最后'@'为7。                    
“遍历”每个像素点，读取它的灰度值，然后查表找到最后一个比该灰度值大的数，输出对应的字符到文件                       
因为是一个文本文档，所以应该是追加写入                     

```
cmake
make
./Pic2Asc <pictureName> <targetFileName>
```
### 所有图片转字符画            

借助Bash脚本 (Pic2Asc_all.sh)，将6567张图片全部转换成“字符画”，存入一个文本文档 (AscPic.txt)                 
mplayer输出的图片按序命名，Ubuntu下的 ls 命令的输出结果也正好升序，没有遇到字符画顺序问题                       

```
Pic2Asc.c 可以运行后
./Pic2Asc_all.sh <dirName> <targetFileName>
其中 dirName 是存储图片的文件夹名字
```

### 问题：画面“失真”       

字符比像素点大很多，如果每个像素对应一个字符，输出的字符画会很大，无法完整显示                 
从输出的结果看，文本中一个字符的行高和列宽不相等，行与列输出的比例选择不对，正方形的图片输出很可能会变成长方形             
经过测试，按照 行:列=2:1 的比例处理图片（即 每2n行n列 处理一个像素点），得到的字符画的比例和原图较为接近                              

---

## 第三步：字符画播放

### 参考学习            

- [Linux下C语言延时](http://blog.chinaunix.net/uid-722885-id-124909.html)                  
- [C/C++ linux下光标定位和清屏函数(printf 实现)](http://zisedeqing.blog.163.com/blog/static/9555087120129111485394/)          
- [xterm简单使用说明](http://wenku.baidu.com/link?url=8Tq5VYu6wBqXvN9pz7IMvT0xPaKpd5HfKmiltceLNIScNtTzP_nPq_nDOnapJbNVUWM4DQ5M64cIgqg0qonV_OteffgOWp4QlZR5ws_Hsxi)                      

### 问题：画面闪烁

一开始一行一行读取文件，读入一行输出一行，输出“一幅画”后清屏，光标重置左上角，但“播放”时，画面闪烁，有“扫描线”的感觉。。。          
以为是文件读取的次数过多，输出的速度不够，于是一次输入一整幅画（61*160）再输出，但没有改善       

和视频同时“播放”时，发现字符动画速度明显快于原视频，于是使用usleep函数减缓输出速度，大约延时33.15毫秒（因电脑而异），可以和原视频基本同步。            
同时发现延时之后，画面闪烁明显减轻         

然后不知道什么心态，我注释掉了清屏的函数，意外发现画面闪烁问题进一步减轻，即使不延时，画面也基本不闪烁（但会出现闪烁的光标，延时后也基本不出现）          

### 问题：播放难以同步

为了尽可能同步播放，通过一个简单（3行代码）脚本，排除手动运行造成的延迟                
因为无论先运行代码还是先播放视频，都会对字符输出造成一些影响，所以用xterm另外播放视频 (autoPlay.sh)                  

```
./Play.c <fileName>
fileName是存放所有字符画的图片，可以直接运行 ./Play ../Step2_Pic2Asc/AscPic.txt
Play.c 可以运行后
./autoPlay.sh
```
---

## 其他

python版：[bilibili_LuYU426用户 的多个视频](http://space.bilibili.com/77762/#!/index)           
30种版本的Bad Apple：[Bad Apple：技术宅的盛宴](http://www.guokr.com/article/7268/)              
做完才发现，但是没跑起来：[技术宅。Bad Apple 在 linux 中 字符 动画已完成](http://bbs.chinaunix.net/thread-1797109-1-1.html)